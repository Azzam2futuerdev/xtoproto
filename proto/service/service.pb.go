// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.4
// source: github.com/google/xtoproto/proto/service/service.proto

package service

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	recordtoproto "github.com/google/xtoproto/proto/recordtoproto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Format int32

const (
	Format_UNSPECIFIED_FORMAT Format = 0
	Format_CSV                Format = 1
)

// Enum value maps for Format.
var (
	Format_name = map[int32]string{
		0: "UNSPECIFIED_FORMAT",
		1: "CSV",
	}
	Format_value = map[string]int32{
		"UNSPECIFIED_FORMAT": 0,
		"CSV":                1,
	}
)

func (x Format) Enum() *Format {
	p := new(Format)
	*p = x
	return p
}

func (x Format) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Format) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_google_xtoproto_proto_service_service_proto_enumTypes[0].Descriptor()
}

func (Format) Type() protoreflect.EnumType {
	return &file_github_com_google_xtoproto_proto_service_service_proto_enumTypes[0]
}

func (x Format) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Format.Descriptor instead.
func (Format) EnumDescriptor() ([]byte, []int) {
	return file_github_com_google_xtoproto_proto_service_service_proto_rawDescGZIP(), []int{0}
}

type InferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExampleInputs     []*InputFile `protobuf:"bytes,1,rep,name=example_inputs,json=exampleInputs,proto3" json:"example_inputs,omitempty"`
	InputFormat       Format       `protobuf:"varint,2,opt,name=input_format,json=inputFormat,proto3,enum=xtoproto.Format" json:"input_format,omitempty"`
	MessageName       string       `protobuf:"bytes,3,opt,name=message_name,json=messageName,proto3" json:"message_name,omitempty"`
	PackageName       string       `protobuf:"bytes,4,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	GoPackageName     string       `protobuf:"bytes,5,opt,name=go_package_name,json=goPackageName,proto3" json:"go_package_name,omitempty"`
	GoProtoImport     string       `protobuf:"bytes,6,opt,name=go_proto_import,json=goProtoImport,proto3" json:"go_proto_import,omitempty"`
	TimestampLocation string       `protobuf:"bytes,7,opt,name=timestamp_location,json=timestampLocation,proto3" json:"timestamp_location,omitempty"`
}

func (x *InferRequest) Reset() {
	*x = InferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_google_xtoproto_proto_service_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InferRequest) ProtoMessage() {}

func (x *InferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_google_xtoproto_proto_service_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InferRequest.ProtoReflect.Descriptor instead.
func (*InferRequest) Descriptor() ([]byte, []int) {
	return file_github_com_google_xtoproto_proto_service_service_proto_rawDescGZIP(), []int{0}
}

func (x *InferRequest) GetExampleInputs() []*InputFile {
	if x != nil {
		return x.ExampleInputs
	}
	return nil
}

func (x *InferRequest) GetInputFormat() Format {
	if x != nil {
		return x.InputFormat
	}
	return Format_UNSPECIFIED_FORMAT
}

func (x *InferRequest) GetMessageName() string {
	if x != nil {
		return x.MessageName
	}
	return ""
}

func (x *InferRequest) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *InferRequest) GetGoPackageName() string {
	if x != nil {
		return x.GoPackageName
	}
	return ""
}

func (x *InferRequest) GetGoProtoImport() string {
	if x != nil {
		return x.GoProtoImport
	}
	return ""
}

func (x *InferRequest) GetTimestampLocation() string {
	if x != nil {
		return x.TimestampLocation
	}
	return ""
}

type InputFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Spec:
	//	*InputFile_InputPath
	//	*InputFile_InputContent
	Spec isInputFile_Spec `protobuf_oneof:"spec"`
}

func (x *InputFile) Reset() {
	*x = InputFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_google_xtoproto_proto_service_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputFile) ProtoMessage() {}

func (x *InputFile) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_google_xtoproto_proto_service_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputFile.ProtoReflect.Descriptor instead.
func (*InputFile) Descriptor() ([]byte, []int) {
	return file_github_com_google_xtoproto_proto_service_service_proto_rawDescGZIP(), []int{1}
}

func (m *InputFile) GetSpec() isInputFile_Spec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (x *InputFile) GetInputPath() string {
	if x, ok := x.GetSpec().(*InputFile_InputPath); ok {
		return x.InputPath
	}
	return ""
}

func (x *InputFile) GetInputContent() []byte {
	if x, ok := x.GetSpec().(*InputFile_InputContent); ok {
		return x.InputContent
	}
	return nil
}

type isInputFile_Spec interface {
	isInputFile_Spec()
}

type InputFile_InputPath struct {
	InputPath string `protobuf:"bytes,1,opt,name=input_path,json=inputPath,proto3,oneof"`
}

type InputFile_InputContent struct {
	InputContent []byte `protobuf:"bytes,2,opt,name=input_content,json=inputContent,proto3,oneof"`
}

func (*InputFile_InputPath) isInputFile_Spec() {}

func (*InputFile_InputContent) isInputFile_Spec() {}

type InferResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BestMappingCandidate *MappingSet `protobuf:"bytes,1,opt,name=best_mapping_candidate,json=bestMappingCandidate,proto3" json:"best_mapping_candidate,omitempty"`
}

func (x *InferResponse) Reset() {
	*x = InferResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_google_xtoproto_proto_service_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InferResponse) ProtoMessage() {}

func (x *InferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_google_xtoproto_proto_service_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InferResponse.ProtoReflect.Descriptor instead.
func (*InferResponse) Descriptor() ([]byte, []int) {
	return file_github_com_google_xtoproto_proto_service_service_proto_rawDescGZIP(), []int{2}
}

func (x *InferResponse) GetBestMappingCandidate() *MappingSet {
	if x != nil {
		return x.BestMappingCandidate
	}
	return nil
}

type MappingSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopLevelMapping    *recordtoproto.RecordProtoMapping   `protobuf:"bytes,1,opt,name=top_level_mapping,json=topLevelMapping,proto3" json:"top_level_mapping,omitempty"`
	AdditionalMappings []*recordtoproto.RecordProtoMapping `protobuf:"bytes,2,rep,name=additional_mappings,json=additionalMappings,proto3" json:"additional_mappings,omitempty"`
}

func (x *MappingSet) Reset() {
	*x = MappingSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_google_xtoproto_proto_service_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MappingSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MappingSet) ProtoMessage() {}

func (x *MappingSet) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_google_xtoproto_proto_service_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MappingSet.ProtoReflect.Descriptor instead.
func (*MappingSet) Descriptor() ([]byte, []int) {
	return file_github_com_google_xtoproto_proto_service_service_proto_rawDescGZIP(), []int{3}
}

func (x *MappingSet) GetTopLevelMapping() *recordtoproto.RecordProtoMapping {
	if x != nil {
		return x.TopLevelMapping
	}
	return nil
}

func (x *MappingSet) GetAdditionalMappings() []*recordtoproto.RecordProtoMapping {
	if x != nil {
		return x.AdditionalMappings
	}
	return nil
}

type GenerateCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mapping         *recordtoproto.RecordProtoMapping    `protobuf:"bytes,1,opt,name=mapping,proto3" json:"mapping,omitempty"`
	WorkspacePath   string                               `protobuf:"bytes,2,opt,name=workspace_path,json=workspacePath,proto3" json:"workspace_path,omitempty"`
	ProtoDefinition *GenerateCodeRequest_ProtoDefinition `protobuf:"bytes,3,opt,name=proto_definition,json=protoDefinition,proto3" json:"proto_definition,omitempty"`
	Converter       *GenerateCodeRequest_Converter       `protobuf:"bytes,4,opt,name=converter,proto3" json:"converter,omitempty"`
}

func (x *GenerateCodeRequest) Reset() {
	*x = GenerateCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_google_xtoproto_proto_service_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateCodeRequest) ProtoMessage() {}

func (x *GenerateCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_google_xtoproto_proto_service_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateCodeRequest.ProtoReflect.Descriptor instead.
func (*GenerateCodeRequest) Descriptor() ([]byte, []int) {
	return file_github_com_google_xtoproto_proto_service_service_proto_rawDescGZIP(), []int{4}
}

func (x *GenerateCodeRequest) GetMapping() *recordtoproto.RecordProtoMapping {
	if x != nil {
		return x.Mapping
	}
	return nil
}

func (x *GenerateCodeRequest) GetWorkspacePath() string {
	if x != nil {
		return x.WorkspacePath
	}
	return ""
}

func (x *GenerateCodeRequest) GetProtoDefinition() *GenerateCodeRequest_ProtoDefinition {
	if x != nil {
		return x.ProtoDefinition
	}
	return nil
}

func (x *GenerateCodeRequest) GetConverter() *GenerateCodeRequest_Converter {
	if x != nil {
		return x.Converter
	}
	return nil
}

type GenerateCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtoFile          *GenerateCodeResponse_File `protobuf:"bytes,1,opt,name=proto_file,json=protoFile,proto3" json:"proto_file,omitempty"`
	ProtoBuildFile     *GenerateCodeResponse_File `protobuf:"bytes,2,opt,name=proto_build_file,json=protoBuildFile,proto3" json:"proto_build_file,omitempty"`
	ConverterGoFile    *GenerateCodeResponse_File `protobuf:"bytes,3,opt,name=converter_go_file,json=converterGoFile,proto3" json:"converter_go_file,omitempty"`
	ConverterBuildFile *GenerateCodeResponse_File `protobuf:"bytes,4,opt,name=converter_build_file,json=converterBuildFile,proto3" json:"converter_build_file,omitempty"`
}

func (x *GenerateCodeResponse) Reset() {
	*x = GenerateCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_google_xtoproto_proto_service_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateCodeResponse) ProtoMessage() {}

func (x *GenerateCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_google_xtoproto_proto_service_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateCodeResponse.ProtoReflect.Descriptor instead.
func (*GenerateCodeResponse) Descriptor() ([]byte, []int) {
	return file_github_com_google_xtoproto_proto_service_service_proto_rawDescGZIP(), []int{5}
}

func (x *GenerateCodeResponse) GetProtoFile() *GenerateCodeResponse_File {
	if x != nil {
		return x.ProtoFile
	}
	return nil
}

func (x *GenerateCodeResponse) GetProtoBuildFile() *GenerateCodeResponse_File {
	if x != nil {
		return x.ProtoBuildFile
	}
	return nil
}

func (x *GenerateCodeResponse) GetConverterGoFile() *GenerateCodeResponse_File {
	if x != nil {
		return x.ConverterGoFile
	}
	return nil
}

func (x *GenerateCodeResponse) GetConverterBuildFile() *GenerateCodeResponse_File {
	if x != nil {
		return x.ConverterBuildFile
	}
	return nil
}

type GenerateCodeRequest_ProtoDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Directory        string `protobuf:"bytes,1,opt,name=directory,proto3" json:"directory,omitempty"`
	ProtoFileName    string `protobuf:"bytes,2,opt,name=proto_file_name,json=protoFileName,proto3" json:"proto_file_name,omitempty"`
	UpdateBuildRules bool   `protobuf:"varint,3,opt,name=update_build_rules,json=updateBuildRules,proto3" json:"update_build_rules,omitempty"`
}

func (x *GenerateCodeRequest_ProtoDefinition) Reset() {
	*x = GenerateCodeRequest_ProtoDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_google_xtoproto_proto_service_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateCodeRequest_ProtoDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateCodeRequest_ProtoDefinition) ProtoMessage() {}

func (x *GenerateCodeRequest_ProtoDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_google_xtoproto_proto_service_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateCodeRequest_ProtoDefinition.ProtoReflect.Descriptor instead.
func (*GenerateCodeRequest_ProtoDefinition) Descriptor() ([]byte, []int) {
	return file_github_com_google_xtoproto_proto_service_service_proto_rawDescGZIP(), []int{4, 0}
}

func (x *GenerateCodeRequest_ProtoDefinition) GetDirectory() string {
	if x != nil {
		return x.Directory
	}
	return ""
}

func (x *GenerateCodeRequest_ProtoDefinition) GetProtoFileName() string {
	if x != nil {
		return x.ProtoFileName
	}
	return ""
}

func (x *GenerateCodeRequest_ProtoDefinition) GetUpdateBuildRules() bool {
	if x != nil {
		return x.UpdateBuildRules
	}
	return false
}

type GenerateCodeRequest_Converter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Directory        string `protobuf:"bytes,1,opt,name=directory,proto3" json:"directory,omitempty"`
	GoFileName       string `protobuf:"bytes,2,opt,name=go_file_name,json=goFileName,proto3" json:"go_file_name,omitempty"`
	UpdateBuildRules bool   `protobuf:"varint,3,opt,name=update_build_rules,json=updateBuildRules,proto3" json:"update_build_rules,omitempty"`
}

func (x *GenerateCodeRequest_Converter) Reset() {
	*x = GenerateCodeRequest_Converter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_google_xtoproto_proto_service_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateCodeRequest_Converter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateCodeRequest_Converter) ProtoMessage() {}

func (x *GenerateCodeRequest_Converter) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_google_xtoproto_proto_service_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateCodeRequest_Converter.ProtoReflect.Descriptor instead.
func (*GenerateCodeRequest_Converter) Descriptor() ([]byte, []int) {
	return file_github_com_google_xtoproto_proto_service_service_proto_rawDescGZIP(), []int{4, 1}
}

func (x *GenerateCodeRequest_Converter) GetDirectory() string {
	if x != nil {
		return x.Directory
	}
	return ""
}

func (x *GenerateCodeRequest_Converter) GetGoFileName() string {
	if x != nil {
		return x.GoFileName
	}
	return ""
}

func (x *GenerateCodeRequest_Converter) GetUpdateBuildRules() bool {
	if x != nil {
		return x.UpdateBuildRules
	}
	return false
}

type GenerateCodeResponse_File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkspaceRelativePath string `protobuf:"bytes,1,opt,name=workspace_relative_path,json=workspaceRelativePath,proto3" json:"workspace_relative_path,omitempty"`
	NewContents           []byte `protobuf:"bytes,2,opt,name=new_contents,json=newContents,proto3" json:"new_contents,omitempty"`
}

func (x *GenerateCodeResponse_File) Reset() {
	*x = GenerateCodeResponse_File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_google_xtoproto_proto_service_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateCodeResponse_File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateCodeResponse_File) ProtoMessage() {}

func (x *GenerateCodeResponse_File) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_google_xtoproto_proto_service_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateCodeResponse_File.ProtoReflect.Descriptor instead.
func (*GenerateCodeResponse_File) Descriptor() ([]byte, []int) {
	return file_github_com_google_xtoproto_proto_service_service_proto_rawDescGZIP(), []int{5, 0}
}

func (x *GenerateCodeResponse_File) GetWorkspaceRelativePath() string {
	if x != nil {
		return x.WorkspaceRelativePath
	}
	return ""
}

func (x *GenerateCodeResponse_File) GetNewContents() []byte {
	if x != nil {
		return x.NewContents
	}
	return nil
}

var File_github_com_google_xtoproto_proto_service_service_proto protoreflect.FileDescriptor

var file_github_com_google_xtoproto_proto_service_service_proto_rawDesc = []byte{
	0x0a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x78, 0x74, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x78, 0x74, 0x6f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x78, 0x74, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x74, 0x6f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x74, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc4, 0x02, 0x0a, 0x0c, 0x49, 0x6e, 0x66, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x78, 0x74, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x52, 0x0d, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x73, 0x12, 0x33, 0x0a, 0x0c, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x78, 0x74, 0x6f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x0b, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26,
	0x0a, 0x0f, 0x67, 0x6f, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x6f, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x67, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x5f, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x67, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x2d,
	0x0a, 0x12, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5b, 0x0a,
	0x09, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x25, 0x0a, 0x0d, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x5b, 0x0a, 0x0d, 0x49, 0x6e,
	0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x16, 0x62,
	0x65, 0x73, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x61, 0x6e, 0x64,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x78, 0x74,
	0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x53, 0x65,
	0x74, 0x52, 0x14, 0x62, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x43, 0x61,
	0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x0a, 0x4d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x53, 0x65, 0x74, 0x12, 0x48, 0x0a, 0x11, 0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x78, 0x74, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52,
	0x0f, 0x74, 0x6f, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x12, 0x4d, 0x0a, 0x13, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6d,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x78, 0x74, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x12, 0x61, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x22,
	0x98, 0x04, 0x0a, 0x13, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x07, 0x6d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x78, 0x74, 0x6f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4d,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12,
	0x25, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x58, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x78, 0x74, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x45, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x78, 0x74, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x72, 0x52, 0x09, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x72, 0x1a, 0x85, 0x01, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x2c, 0x0a, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x1a,
	0x79, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0c, 0x67, 0x6f,
	0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x67, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x72, 0x75, 0x6c,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x22, 0xb4, 0x03, 0x0a, 0x14, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x78, 0x74, 0x6f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x4d, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x78, 0x74, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x4f, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x74, 0x65, 0x72, 0x5f, 0x67, 0x6f, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x78, 0x74, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65,
	0x72, 0x47, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x55, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x74, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x78, 0x74, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x74, 0x65, 0x72, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x1a, 0x61,
	0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x21,
	0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x73, 0x2a, 0x29, 0x0a, 0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x12, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41,
	0x54, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x53, 0x56, 0x10, 0x01, 0x32, 0x9e, 0x01, 0x0a,
	0x0f, 0x58, 0x54, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x3a, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x78, 0x74, 0x6f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x78, 0x74, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x66,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0c,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x2e, 0x78,
	0x74, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x78, 0x74,
	0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2a, 0x5a,
	0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x78, 0x74, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_github_com_google_xtoproto_proto_service_service_proto_rawDescOnce sync.Once
	file_github_com_google_xtoproto_proto_service_service_proto_rawDescData = file_github_com_google_xtoproto_proto_service_service_proto_rawDesc
)

func file_github_com_google_xtoproto_proto_service_service_proto_rawDescGZIP() []byte {
	file_github_com_google_xtoproto_proto_service_service_proto_rawDescOnce.Do(func() {
		file_github_com_google_xtoproto_proto_service_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_google_xtoproto_proto_service_service_proto_rawDescData)
	})
	return file_github_com_google_xtoproto_proto_service_service_proto_rawDescData
}

var file_github_com_google_xtoproto_proto_service_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_google_xtoproto_proto_service_service_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_github_com_google_xtoproto_proto_service_service_proto_goTypes = []interface{}{
	(Format)(0),                                 // 0: xtoproto.Format
	(*InferRequest)(nil),                        // 1: xtoproto.InferRequest
	(*InputFile)(nil),                           // 2: xtoproto.InputFile
	(*InferResponse)(nil),                       // 3: xtoproto.InferResponse
	(*MappingSet)(nil),                          // 4: xtoproto.MappingSet
	(*GenerateCodeRequest)(nil),                 // 5: xtoproto.GenerateCodeRequest
	(*GenerateCodeResponse)(nil),                // 6: xtoproto.GenerateCodeResponse
	(*GenerateCodeRequest_ProtoDefinition)(nil), // 7: xtoproto.GenerateCodeRequest.ProtoDefinition
	(*GenerateCodeRequest_Converter)(nil),       // 8: xtoproto.GenerateCodeRequest.Converter
	(*GenerateCodeResponse_File)(nil),           // 9: xtoproto.GenerateCodeResponse.File
	(*recordtoproto.RecordProtoMapping)(nil),    // 10: xtoproto.RecordProtoMapping
}
var file_github_com_google_xtoproto_proto_service_service_proto_depIdxs = []int32{
	2,  // 0: xtoproto.InferRequest.example_inputs:type_name -> xtoproto.InputFile
	0,  // 1: xtoproto.InferRequest.input_format:type_name -> xtoproto.Format
	4,  // 2: xtoproto.InferResponse.best_mapping_candidate:type_name -> xtoproto.MappingSet
	10, // 3: xtoproto.MappingSet.top_level_mapping:type_name -> xtoproto.RecordProtoMapping
	10, // 4: xtoproto.MappingSet.additional_mappings:type_name -> xtoproto.RecordProtoMapping
	10, // 5: xtoproto.GenerateCodeRequest.mapping:type_name -> xtoproto.RecordProtoMapping
	7,  // 6: xtoproto.GenerateCodeRequest.proto_definition:type_name -> xtoproto.GenerateCodeRequest.ProtoDefinition
	8,  // 7: xtoproto.GenerateCodeRequest.converter:type_name -> xtoproto.GenerateCodeRequest.Converter
	9,  // 8: xtoproto.GenerateCodeResponse.proto_file:type_name -> xtoproto.GenerateCodeResponse.File
	9,  // 9: xtoproto.GenerateCodeResponse.proto_build_file:type_name -> xtoproto.GenerateCodeResponse.File
	9,  // 10: xtoproto.GenerateCodeResponse.converter_go_file:type_name -> xtoproto.GenerateCodeResponse.File
	9,  // 11: xtoproto.GenerateCodeResponse.converter_build_file:type_name -> xtoproto.GenerateCodeResponse.File
	1,  // 12: xtoproto.XToProtoService.Infer:input_type -> xtoproto.InferRequest
	5,  // 13: xtoproto.XToProtoService.GenerateCode:input_type -> xtoproto.GenerateCodeRequest
	3,  // 14: xtoproto.XToProtoService.Infer:output_type -> xtoproto.InferResponse
	6,  // 15: xtoproto.XToProtoService.GenerateCode:output_type -> xtoproto.GenerateCodeResponse
	14, // [14:16] is the sub-list for method output_type
	12, // [12:14] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_github_com_google_xtoproto_proto_service_service_proto_init() }
func file_github_com_google_xtoproto_proto_service_service_proto_init() {
	if File_github_com_google_xtoproto_proto_service_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_google_xtoproto_proto_service_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_google_xtoproto_proto_service_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_google_xtoproto_proto_service_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InferResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_google_xtoproto_proto_service_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MappingSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_google_xtoproto_proto_service_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_google_xtoproto_proto_service_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_google_xtoproto_proto_service_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateCodeRequest_ProtoDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_google_xtoproto_proto_service_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateCodeRequest_Converter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_google_xtoproto_proto_service_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateCodeResponse_File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_github_com_google_xtoproto_proto_service_service_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*InputFile_InputPath)(nil),
		(*InputFile_InputContent)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_google_xtoproto_proto_service_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_google_xtoproto_proto_service_service_proto_goTypes,
		DependencyIndexes: file_github_com_google_xtoproto_proto_service_service_proto_depIdxs,
		EnumInfos:         file_github_com_google_xtoproto_proto_service_service_proto_enumTypes,
		MessageInfos:      file_github_com_google_xtoproto_proto_service_service_proto_msgTypes,
	}.Build()
	File_github_com_google_xtoproto_proto_service_service_proto = out.File
	file_github_com_google_xtoproto_proto_service_service_proto_rawDesc = nil
	file_github_com_google_xtoproto_proto_service_service_proto_goTypes = nil
	file_github_com_google_xtoproto_proto_service_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// XToProtoServiceClient is the client API for XToProtoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type XToProtoServiceClient interface {
	Infer(ctx context.Context, in *InferRequest, opts ...grpc.CallOption) (*InferResponse, error)
	GenerateCode(ctx context.Context, in *GenerateCodeRequest, opts ...grpc.CallOption) (*GenerateCodeResponse, error)
}

type xToProtoServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewXToProtoServiceClient(cc grpc.ClientConnInterface) XToProtoServiceClient {
	return &xToProtoServiceClient{cc}
}

func (c *xToProtoServiceClient) Infer(ctx context.Context, in *InferRequest, opts ...grpc.CallOption) (*InferResponse, error) {
	out := new(InferResponse)
	err := c.cc.Invoke(ctx, "/xtoproto.XToProtoService/Infer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xToProtoServiceClient) GenerateCode(ctx context.Context, in *GenerateCodeRequest, opts ...grpc.CallOption) (*GenerateCodeResponse, error) {
	out := new(GenerateCodeResponse)
	err := c.cc.Invoke(ctx, "/xtoproto.XToProtoService/GenerateCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// XToProtoServiceServer is the server API for XToProtoService service.
type XToProtoServiceServer interface {
	Infer(context.Context, *InferRequest) (*InferResponse, error)
	GenerateCode(context.Context, *GenerateCodeRequest) (*GenerateCodeResponse, error)
}

// UnimplementedXToProtoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedXToProtoServiceServer struct {
}

func (*UnimplementedXToProtoServiceServer) Infer(context.Context, *InferRequest) (*InferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Infer not implemented")
}
func (*UnimplementedXToProtoServiceServer) GenerateCode(context.Context, *GenerateCodeRequest) (*GenerateCodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateCode not implemented")
}

func RegisterXToProtoServiceServer(s *grpc.Server, srv XToProtoServiceServer) {
	s.RegisterService(&_XToProtoService_serviceDesc, srv)
}

func _XToProtoService_Infer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XToProtoServiceServer).Infer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xtoproto.XToProtoService/Infer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XToProtoServiceServer).Infer(ctx, req.(*InferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _XToProtoService_GenerateCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XToProtoServiceServer).GenerateCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xtoproto.XToProtoService/GenerateCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XToProtoServiceServer).GenerateCode(ctx, req.(*GenerateCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _XToProtoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "xtoproto.XToProtoService",
	HandlerType: (*XToProtoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Infer",
			Handler:    _XToProtoService_Infer_Handler,
		},
		{
			MethodName: "GenerateCode",
			Handler:    _XToProtoService_GenerateCode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/google/xtoproto/proto/service/service.proto",
}
